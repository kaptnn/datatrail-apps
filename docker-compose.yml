services:
  db:
    image: mysql:8.0
    restart: unless-stopped
    env_file:
      - ./db/.env
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u $$MYSQL_USER --silent"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_net
    deploy:
      resources:
        limits:
          cpus: "0.30"
          memory: 512M
        reservations:
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: datatrail-backend:latest
    restart: unless-stopped
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/v1/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app_net
    deploy:
      resources:
        limits:
          cpus: "0.40"
          memory: 1024M
        reservations:
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: datatrail-frontend:latest
    restart: unless-stopped
    user: node
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    ports:
      - "3000:3000"
    networks:
      - app_net
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 768M
        reservations:
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:alpine
    container_name: nginx
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app_net
    restart: unless-stopped

volumes:
  db_data:

networks:
  app_net:
    driver: bridge